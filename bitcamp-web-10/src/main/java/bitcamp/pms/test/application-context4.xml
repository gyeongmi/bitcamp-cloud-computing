<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
        <!-- xmlns:context="http://www.springframework.org/schema/context" -->
        
        <!-- @Autowired를 처리하려면 객체를 생성한 후 그 작업을 수행할 객체를
                        컨테이너에 등록해야 한다. 등록해 두면 컨테이너가 사용할 것이다. -->
        
        <!-- <context:annotation-config/> --> <!-- 5개의 bean이  자동으로 만들어지고 출력됨 -->
            <!-- context:component-scan을 사용할떄 context:annotation-config 활성화하기 떄문에 쓰지 않아도 된다-->
        <context:component-scan base-package="bitcamp.pms.test"/>
        <!-- 객체 자동화  @Component 붙여진 것도 객체로 만들어짐 -->
        
        <!--https://docs.spring.io/spring-framework/docs/5.0.7.RELEASE/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html  -->
         <!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
         <bean class="org.springframework.beans.factory.annotation.CommonAutowiredAnnotationBeanPostProcessor"></bean> -->
        <!-- 직접 만들지 말고 애노테이션 쓰자!!
        <bean id="memberDao" class="bitcamp.pms.test.MemberDao"></bean>
        <bean id="memberListController" class="bitcamp.pms.test.MemberListController"/> -->
</beans>
