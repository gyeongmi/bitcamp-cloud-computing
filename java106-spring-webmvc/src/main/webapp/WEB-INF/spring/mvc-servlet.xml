<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <context:component-scan base-package="bitcamp.mvc.web"/>
    
    <!-- MVC 관련 애노테이션을 처리할 객체들을 자동 등록한다. 
         matrix variable 기능을 사용하고 싶으면 다음과 같이 활성화시켜라!
    -->
    <mvc:annotation-driven enable-matrix-variables="true">
        <mvc:message-converters> <!-- HttpMessageConverter 중간에 개입해서 클라이언트에서 받은 문자열을 자바객체로 바꾸고  자바객체로 바꾼걸 페이지컨트롤러가 받아 쓰고, 리턴한 값을 또 json에서  board 객체 문자열로 만들어서 파라미터 값을 ... -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">

                <!-- setObjectMapper() -->
                <property name="objectMapper"> <!-- setObjectMapper 를 꽂아줘야 되는데.. -->

                   <!-- new ObjectMapper(); -->
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper"><!-- 원래 오브젝트 매퍼 쓸거임 <bean class="com.xxx.model.MyJacksonObjectMapper"> 이거 말고 -->

                        <!-- setDateFormat() -->
                        <property name="dateFormat">

                            <!-- 객체 생성해야 함 (bean)-->
                            <!-- new SimpleDateFormat("yyyy-MM-dd") -->
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg value="yyyy-MM-dd"/>
                            </bean>

                        </property>
                    </bean>
                </property>
        </bean>
            
        
        
        </mvc:message-converters>
    
    </mvc:annotation-driven>
    
    <!-- Spring WebMVC의 기본 뷰 리졸버를 교체한다.
         => JSP URL의 앞뒤 경로를 미리 설정해두면 페이지 컨트롤러에서 
            view URL을 지정하기 쉽다.  
    -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/jsp/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 인터셉터 꼽기 -->
	<mvc:interceptors>
	   <!-- 모든 요청에 대해 인터셉터를 적용한다. -->
	   <!-- <bean class="bitcamp.mvc.web.Exam09_1_interceptor"/> -->
	   
	   <!-- 특정 URL에 대해서만 인터셉터 적용하기 -->
	   <mvc:interceptor>
	       <mvc:mapping path="/exam09_1/**"/>
	       <mvc:exclude-mapping path="/exam09_1/bbb/**"/>
	       <bean class="bitcamp.mvc.web.Exam09_1_interceptor"/>
	   </mvc:interceptor>
	</mvc:interceptors>
	
</beans>













